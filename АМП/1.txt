#include <bcm2835.h> 
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
#define PIN RPI_GPIO_P1_12 //12
#define PWM_CHANNEL 0
#define RANGE 1024 
int main(int argc, char **argv) 
{ 
  int direction = 1, data = 1, count = 0;

  if (!bcm2835_init()) 
    return 1; 

  bcm2835_gpio_fsel(PIN, BCM2835_GPIO_FSEL_OUTP);
  bcm2835_pwm_set_clock(BCM2835_PWM_CLOCK_DIVIDER_16);
  bcm2835_pwm_set_mode(PWM_CHANNEL, 1, 1);
  bcm2835_pwm_set_range(PWM_CHANNEL, RANGE);

  if(argc > 2 && strcmp(argv[1], "set") == 0) 
  { 
    printf("set\n");
    bcm2835_gpio_fsel(PIN, BCM2835_GPIO_FSEL_OUTP); 
    int state = atoi(argv[2]); 
    bcm2835_gpio_write(PIN, state); 
    bcm2835_close(); 
  } 
  else if(argc > 2 && strcmp(argv[1], "shim") == 0)
  { 
    printf("shim\n");
    bcm2835_gpio_fsel(PIN, BCM2835_GPIO_FSEL_ALT5);
    bcm2835_pwm_set_clock(BCM2835_PWM_CLOCK_DIVIDER_16);
    bcm2835_pwm_set_mode(PWM_CHANNEL, 1, 1);
    bcm2835_pwm_set_range(PWM_CHANNEL, RANGE);
    int direction = 1;
    int data = 1;
    int count = 0;

    while (count < 5)
    {
      if (data == 1)
        direction = 1;
      else if (data == atoi(argv[2])){
        count++;
        direction = 0;
      }
      else if (data == RANGE-1)
      {
        count++;
        direction = -1;
      }

      data += direction;
      bcm2835_pwm_set_data(PWM_CHANNEL, data);
      bcm2835_delay(1);
    }
  }
  else
  { 
    bcm2835_gpio_fsel(PIN, BCM2835_GPIO_FSEL_OUTP); // установка порта на вывод
    unsigned int t_on, t_off; // продолжительность вкл. и выкл. состояния
    int d = 5, i, j, flag=0;
// d- коэффициент заполнения в процентах
//i и j, вспомогательные переменные для организации циклов
//flag- если = 0 светодиод затухает, если = 1 разгорается
    int a=10; // количество полных рабочих циклов 
    while (a)
    {
      for (j=50; j!=0; j--) // изменяем коэффициент заполнения от 100% до 0%
      {
        t_on=50*d; //находим время включения
        t_off=50*(100-d); //находим время выключения
// если светодиод затухает, уменьшаем коэффициент заполнения
        if (flag==0) d=d-1;
// если светодиод разгорается, увеличиваем коэффициент заполнения
        if (flag==1) d=d+1;
// передаём 10 импульсов на светодиод с рассчитанными параметрами
        for (i=10; i!=0; i--)
        {
          bcm2835_gpio_write(PIN, LOW);
          delayMicroseconds(t_on);
         bcm2835_gpio_write(PIN, HIGH);
          delayMicroseconds(t_off);
        }
// если светодиод выключен, начинаем его включать
        if (d==0) flag=1;
// если светодиод достиг максимума свечения, начинаем его гасить
        if (d==100) flag=0;
      }
      a--;
    }
  }
  bcm2835_close(); 
  return 0; 
}
